@model ConnectedRoot.ViewModels.HuertoPaginadoViewModel

@{
    ViewData["Title"] = "Lista de Huertos";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        <strong><i class="fas fa-seedling"></i> Gestión de Huertos Urbanos</strong>
    </h2>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus"></i> Crear Nuevo Huerto
    </a>
</div>

<!-- Mensajes de feedback -->
@if (!string.IsNullOrEmpty(ViewBag.Error))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle"></i>
        @ViewBag.Error
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (!string.IsNullOrEmpty(ViewBag.Success))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle"></i>
        @ViewBag.Success
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle"></i>
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle"></i>
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Panel de Filtros -->
<div class="card shadow-sm mb-4">
    <div class="card-header bg-light">
        <h6 class="card-title mb-0">
            <i class="fas fa-filter"></i> Filtros de Búsqueda
        </h6>
    </div>
    <div class="card-body">
        <form method="get" asp-action="Index">
            <div class="row g-3">
                <!-- Búsqueda por texto -->
                <div class="col-md-4">
                    <label for="busquedaTexto" class="form-label">Buscar</label>
                    <input type="text" 
                           class="form-control" 
                           id="busquedaTexto" 
                           name="busquedaTexto" 
                           value="@Model.BusquedaTexto" 
                           placeholder="Nombre del huerto">
                </div>
                
                <!-- Filtro por estado -->
                <div class="col-md-2">
                    <label for="filtroEstado" class="form-label">Estado</label>
                    <select class="form-select" id="filtroEstado" name="filtroEstado">
                        @foreach (var estado in Model.EstadosDisponibles)
                        {
                            <option value="@estado" selected="@(Model.FiltroEstado == estado)">@estado</option>
                        }
                    </select>
                </div>

                <!-- Fecha desde -->
                <div class="col-md-2">
                    <label for="filtroFechaDesde" class="form-label">Desde</label>
                    <input type="date" 
                           class="form-control" 
                           id="filtroFechaDesde" 
                           name="filtroFechaDesde" 
                           value="@Model.FiltroFechaDesde">
                </div>

                <!-- Fecha hasta -->
                <div class="col-md-2">
                    <label for="filtroFechaHasta" class="form-label">Hasta</label>
                    <input type="date" 
                           class="form-control" 
                           id="filtroFechaHasta" 
                           name="filtroFechaHasta" 
                           value="@Model.FiltroFechaHasta">
                </div>
                
                <!-- Botones -->
                <div class="col-md-2 d-flex align-items-end">
                    <div class="btn-group w-100" role="group">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search">Filtrar</i> 
                        </button>
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                            <i class="fas fa-times">Limpiar</i> 
                        </a>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Contenido principal -->
@if (Model.TotalHuertos == 0)
{
    @if (string.IsNullOrEmpty(Model.BusquedaTexto) && Model.FiltroEstado == "Todos" && 
         string.IsNullOrEmpty(Model.FiltroFechaDesde) && string.IsNullOrEmpty(Model.FiltroFechaHasta))
    {
        <!-- No hay huertos en absoluto -->
        <div class="text-center py-5">
            <div class="alert alert-info border-0 shadow-sm">
                <i class="fas fa-seedling fa-3x text-info mb-3"></i>
                <h4>¡Conexión exitosa! 🎉</h4>
                <p class="mb-3">MongoDB está conectado correctamente, pero no hay huertos registrados aún.</p>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Crear el primer huerto
                </a>
            </div>
        </div>
    }
    else
    {
        <!-- No hay resultados para la búsqueda -->
        <div class="text-center py-5">
            <div class="alert alert-warning border-0 shadow-sm">
                <i class="fas fa-search fa-3x text-warning mb-3"></i>
                <h4>No se encontraron resultados</h4>
                <p class="mb-3">No hay huertos que coincidan con los filtros aplicados.</p>
                <a href="@Url.Action("Index")" class="btn btn-outline-primary">
                    <i class="fas fa-undo"></i> Limpiar filtros
                </a>
            </div>
        </div>
    }
}
else
{
    <!-- Información de resultados -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h5 class="mb-0">
            <i class="fas fa-list"></i> Lista de Huertos
            <span class="badge bg-primary fs-6">@Model.TotalHuertos huerto(s)</span>
        </h5>
        <small class="text-muted">
            <i class="fas fa-info-circle"></i>
            Mostrando @Model.HuertoDesde-@Model.HuertoHasta de @Model.TotalHuertos huerto(s) |
            Activos: @Model.Huertos.Count(h => h.Estado == "activo") |
            Inactivos: @Model.Huertos.Count(h => h.Estado == "inactivo")
        </small>
    </div>

    <div class="row">
        @foreach (var huerto in Model.Huertos)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100 shadow-sm @(huerto.Estado == "activo" ? "" : "border-secondary")">
                    <div class="card-header @(huerto.Estado == "activo" ? "bg-success" : "bg-secondary") text-white">
                        <div class="d-flex justify-content-between align-items-center">
                            <h6 class="card-title mb-0">@huerto.NombreHuerto</h6>
                            @if (huerto.Estado == "activo")
                            {
                                <span class="badge bg-light text-success">
                                    <i class="fas fa-check"></i> Activo
                                </span>
                            }
                            else
                            {
                                <span class="badge bg-light text-danger">
                                    <i class="fas fa-times"></i> Inactivo
                                </span>
                            }
                        </div>
                    </div>
                    <div class="card-body">
                        <p class="card-text">
                            <strong>📍 Ubicación:</strong><br>
                            <small class="text-muted">@huerto.Ubicacion</small>
                        </p>
                        
                        <p class="card-text">
                            <strong>👤 Responsable:</strong><br>
                            @if (huerto.Responsable != null)
                            {
                                <span class="text-info">
                                    @huerto.Responsable.Nombre @huerto.Responsable.PrimerApellido
                                    @if (!string.IsNullOrEmpty(huerto.Responsable.SegundoApellido))
                                    {
                                        <span>@huerto.Responsable.SegundoApellido</span>
                                    }
                                </span>
                                @if (!string.IsNullOrEmpty(huerto.Responsable.Correo))
                                {
                                    <br><small class="text-muted">@huerto.Responsable.Correo</small>
                                }
                            }
                            else
                            {
                                <span class="text-muted">Sin responsable asignado</span>
                            }
                        </p>
                        
                        <p class="card-text">
                            <strong>📅 Registrado:</strong><br>
                            <small class="text-muted">@huerto.FechaRegistro.ToString("dd/MM/yyyy HH:mm")</small>
                        </p>
                    </div>
                    <div class="card-footer bg-transparent">
                        <div class="btn-group w-100" role="group">
                            <!-- Botón Details -->
                            <a asp-action="Details" asp-route-id="@huerto.Id" 
                               class="btn btn-sm btn-outline-info"
                               title="Ver detalles de @huerto.NombreHuerto" 
                               data-bs-toggle="tooltip">
                                <i class="fas fa-eye"></i>
                                <span class="d-none d-md-inline ms-1">Ver</span>
                            </a>

                            <!-- Botón Edit -->
                            <a asp-action="Edit" asp-route-id="@huerto.Id" 
                               class="btn btn-sm btn-outline-warning"
                               title="Editar @huerto.NombreHuerto" 
                               data-bs-toggle="tooltip">
                                <i class="fas fa-edit"></i>
                                <span class="d-none d-md-inline ms-1">Editar</span>
                            </a>

                            <!-- Botón Toggle Status -->
                            <form asp-action="ToggleStatus" asp-route-id="@huerto.Id" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <button type="submit" 
                                        class="btn btn-sm @(huerto.Estado == "activo" ? "btn-outline-danger" : "btn-outline-success")"
                                        title="@(huerto.Estado == "activo" ? "Desactivar" : "Activar") @huerto.NombreHuerto"
                                        data-bs-toggle="tooltip"
                                        onclick="return confirm('@(huerto.Estado == "activo" ? "¿Desactivar" : "¿Activar") este huerto?')">
                                    <i class="fas fa-@(huerto.Estado == "activo" ? "ban" : "check")"></i>
                                    <span class="d-none d-md-inline ms-1">@(huerto.Estado == "activo" ? "Desactivar" : "Activar")</span>
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Paginación -->
    @if (Model.TotalPaginas > 1)
    {
        <nav aria-label="Paginación de huertos" class="mt-4">
            <ul class="pagination justify-content-center">
                <!-- Primera página -->
                @if (Model.TienePaginaAnterior)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { busquedaTexto = Model.BusquedaTexto, filtroEstado = Model.FiltroEstado, filtroFechaDesde = Model.FiltroFechaDesde, filtroFechaHasta = Model.FiltroFechaHasta, pagina = 1 })">
                            <i class="fas fa-angle-double-left"></i>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { busquedaTexto = Model.BusquedaTexto, filtroEstado = Model.FiltroEstado, filtroFechaDesde = Model.FiltroFechaDesde, filtroFechaHasta = Model.FiltroFechaHasta, pagina = Model.PaginaActual - 1 })">
                            <i class="fas fa-angle-left"></i>
                        </a>
                    </li>
                }

                <!-- Páginas numéricas -->
                @{
                    int paginaInicio = Math.Max(1, Model.PaginaActual - 2);
                    int paginaFin = Math.Min(Model.TotalPaginas, Model.PaginaActual + 2);
                }

                @for (int i = paginaInicio; i <= paginaFin; i++)
                {
                    <li class="page-item @(i == Model.PaginaActual ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { busquedaTexto = Model.BusquedaTexto, filtroEstado = Model.FiltroEstado, filtroFechaDesde = Model.FiltroFechaDesde, filtroFechaHasta = Model.FiltroFechaHasta, pagina = i })">
                            @i
                        </a>
                    </li>
                }

                <!-- Última página -->
                @if (Model.TienePaginaSiguiente)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { busquedaTexto = Model.BusquedaTexto, filtroEstado = Model.FiltroEstado, filtroFechaDesde = Model.FiltroFechaDesde, filtroFechaHasta = Model.FiltroFechaHasta, pagina = Model.PaginaActual + 1 })">
                            <i class="fas fa-angle-right"></i>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { busquedaTexto = Model.BusquedaTexto, filtroEstado = Model.FiltroEstado, filtroFechaDesde = Model.FiltroFechaDesde, filtroFechaHasta = Model.FiltroFechaHasta, pagina = Model.TotalPaginas })">
                            <i class="fas fa-angle-double-right"></i>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
}

@section Scripts {
    <script>
        // Inicializar tooltips de Bootstrap
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });

        // Auto-dismiss alerts
        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert-dismissible');
            alerts.forEach(function(alert) {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);

        // Validación de fechas
        document.getElementById('filtroFechaDesde').addEventListener('change', function() {
            const fechaDesde = this.value;
            const fechaHasta = document.getElementById('filtroFechaHasta').value;
            
            if (fechaDesde && fechaHasta && fechaDesde > fechaHasta) {
                alert('La fecha "Desde" no puede ser mayor que la fecha "Hasta"');
                this.value = '';
            }
        });

        document.getElementById('filtroFechaHasta').addEventListener('change', function() {
            const fechaHasta = this.value;
            const fechaDesde = document.getElementById('filtroFechaDesde').value;
            
            if (fechaDesde && fechaHasta && fechaHasta < fechaDesde) {
                alert('La fecha "Hasta" no puede ser menor que la fecha "Desde"');
                this.value = '';
            }
        });
    </script>
}