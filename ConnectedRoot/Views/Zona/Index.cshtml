@model ConnectedRoot.ViewModels.ZonaPaginadoViewModel

@{
    ViewData["Title"] = "Lista de Zonas";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        <strong><i class="fas fa-map-marked-alt"></i> Gestión de Zonas de Cultivo</strong>
    </h2>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus"></i> Crear Nueva Zona
    </a>
</div>

<!-- Mensajes de feedback -->
@if (!string.IsNullOrEmpty(ViewBag.Error))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle"></i>
        @ViewBag.Error
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (!string.IsNullOrEmpty(ViewBag.Success))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle"></i>
        @ViewBag.Success
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-triangle"></i>
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle"></i>
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Panel de Filtros -->
<div class="card shadow-sm mb-4">
    <div class="card-header bg-light">
        <h6 class="card-title mb-0">
            <i class="fas fa-filter"></i> Filtros de Búsqueda
        </h6>
    </div>
    <div class="card-body">
        <form method="get" asp-action="Index">
            <div class="row g-3">
                <!-- Búsqueda por texto -->
                <div class="col-md-4">
                    <label for="busquedaTexto" class="form-label">Buscar</label>
                    <input type="text" 
                           class="form-control" 
                           id="busquedaTexto" 
                           name="busquedaTexto" 
                           value="@Model.BusquedaTexto" 
                           placeholder="Nombre de zona">
                </div>
                
                <!-- Filtro por tipo de zona -->
                <div class="col-md-4">
                    <label for="filtroTipoZona" class="form-label">Tipo de Zona</label>
                    <select class="form-select" id="filtroTipoZona" name="filtroTipoZona">
                        <option value="Todos" selected="@(Model.FiltroTipoZona == "Todos")">Todos los tipos</option>
                        <option value="Hortalizas" selected="@(Model.FiltroTipoZona == "Hortalizas")">🥬 Hortalizas</option>
                        <option value="Frutales" selected="@(Model.FiltroTipoZona == "Frutales")">🍎 Frutales</option>
                        <option value="Aromáticas" selected="@(Model.FiltroTipoZona == "Aromáticas")">🌿 Aromáticas</option>
                        <option value="Semillero" selected="@(Model.FiltroTipoZona == "Semillero")">🌱 Semillero</option>
                        <option value="Compostaje" selected="@(Model.FiltroTipoZona == "Compostaje")">♻️ Compostaje</option>
                        <option value="Invernadero" selected="@(Model.FiltroTipoZona == "Invernadero")">🏠 Invernadero</option>
                        <option value="Otro" selected="@(Model.FiltroTipoZona == "Otro")">📦 Otro</option>
                    </select>
                </div>

                <!-- Filtro por huerto -->
                <div class="col-md-2">
                    <label for="filtroHuerto" class="form-label">Huerto</label>
                    <select class="form-select" id="filtroHuerto" name="filtroHuerto">
                        @foreach (var huerto in Model.HuertosDisponibles)
                        {
                            <option value="@huerto.Key" selected="@(Model.FiltroHuerto == huerto.Key)">@huerto.Value</option>
                        }
                    </select>
                </div>
                
                <!-- Botones -->
                <div class="col-md-2 d-flex align-items-end">
                    <div class="btn-group w-100" role="group">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search">Filtrar</i> 
                        </button>
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                            <i class="fas fa-times">Limpiar</i> 
                        </a>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Contenido principal -->
@if (Model.TotalZonas == 0)
{
    @if (string.IsNullOrEmpty(Model.BusquedaTexto) && Model.FiltroTipoZona == "Todos" && Model.FiltroHuerto == "Todos")
    {
        <!-- No hay zonas en absoluto -->
        <div class="text-center py-5">
            <div class="alert alert-info border-0 shadow-sm">
                <i class="fas fa-map-marked-alt fa-3x text-info mb-3"></i>
                <h4>¡Conexión exitosa! 🎉</h4>
                <p class="mb-3">MongoDB está conectado correctamente, pero no hay zonas registradas aún.</p>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Crear la primera zona
                </a>
                <a asp-controller="Huerto" asp-action="Index" class="btn btn-outline-secondary ms-2">
                    <i class="fas fa-seedling"></i> Ver huertos
                </a>
            </div>
        </div>
    }
    else
    {
        <!-- No hay resultados para la búsqueda -->
        <div class="text-center py-5">
            <div class="alert alert-warning border-0 shadow-sm">
                <i class="fas fa-search fa-3x text-warning mb-3"></i>
                <h4>No se encontraron resultados</h4>
                <p class="mb-3">No hay zonas que coincidan con los filtros aplicados.</p>
                <a href="@Url.Action("Index")" class="btn btn-outline-primary">
                    <i class="fas fa-undo"></i> Limpiar filtros
                </a>
            </div>
        </div>
    }
}
else
{
    <!-- Información de resultados -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h5 class="mb-0">
            <i class="fas fa-list"></i> Lista de Zonas
            <span class="badge bg-primary fs-6">@Model.TotalZonas zona(s)</span>
        </h5>
        <small class="text-muted">
            <i class="fas fa-info-circle"></i>
            Mostrando @Model.ZonaDesde-@Model.ZonaHasta de @Model.TotalZonas zona(s)
        </small>
    </div>

    <div class="row">
        @foreach (var zona in Model.Zonas)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100 shadow-sm @(zona.Estado == "activa" ? "" : "border-danger")">
                    <div class="card-header bg-info text-white">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="card-title mb-0">@zona.NombreZona</h6>
                                <small class="text-white-50">@zona.TipoZona</small>
                            </div>
                            <span class="badge @(zona.Estado == "activa" ? "bg-success" : "bg-danger")">
                                @zona.Estado.ToUpper()
                            </span>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (Model.NombresHuertos.ContainsKey(zona.HuertoId))
                        {
                            <p class="card-text">
                                <strong>🌱 Huerto:</strong><br>
                                <small class="text-primary">@Model.NombresHuertos[zona.HuertoId]</small>
                            </p>
                        }
                        
                        <p class="card-text">
                            <strong>📝 Descripción:</strong><br>
                            <small class="text-muted">
                                @if (string.IsNullOrEmpty(zona.Descripcion))
                                {
                                    <em>Sin descripción</em>
                                }
                                else
                                {
                                    @(zona.Descripcion.Length > 50 ? zona.Descripcion.Substring(0, 50) + "..." : zona.Descripcion)
                                }
                            </small>
                        </p>
                        
                        @if (zona.Coordenadas != null && zona.Coordenadas.Latitud != 0 && zona.Coordenadas.Longitud != 0)
                        {
                            <p class="card-text">
                                <strong>📍 Coordenadas:</strong><br>
                                <small class="text-info">
                                    @zona.Coordenadas.Latitud.ToString("F4"), @zona.Coordenadas.Longitud.ToString("F4")
                                    <a href="https://www.google.com/maps/search/@zona.Coordenadas.Latitud,@zona.Coordenadas.Longitud" 
                                       target="_blank" 
                                       class="btn btn-sm btn-outline-primary ms-1"
                                       title="Ver en Google Maps">
                                        <i class="fas fa-external-link-alt"></i>
                                    </a>
                                </small>
                            </p>
                        }
                    </div>
                    <div class="card-footer bg-transparent">
                        <div class="btn-group w-100" role="group">
                            <!-- Botón Details -->
                            <a asp-action="Details" asp-route-id="@zona.Id" 
                               class="btn btn-sm btn-outline-info"
                               title="Ver detalles de @zona.NombreZona" 
                               data-bs-toggle="tooltip">
                                <i class="fas fa-eye"></i>
                                <span class="d-none d-md-inline ms-1">Ver</span>
                            </a>

                            <!-- Botón Edit -->
                            <a asp-action="Edit" asp-route-id="@zona.Id" 
                               class="btn btn-sm btn-outline-warning"
                               title="Editar @zona.NombreZona" 
                               data-bs-toggle="tooltip">
                                <i class="fas fa-edit"></i>
                                <span class="d-none d-md-inline ms-1">Editar</span>
                            </a>

                            <!-- Botón Toggle Status -->
                            <button type="button" 
                                    class="btn btn-sm @(zona.Estado == "activa" ? "btn-outline-danger" : "btn-outline-success")"
                                    title="@(zona.Estado == "activa" ? "Desactivar" : "Activar") zona"
                                    data-bs-toggle="tooltip"
                                    onclick="toggleZonaStatus('@zona.Id', '@zona.NombreZona', '@zona.Estado')">
                                <i class="fas @(zona.Estado == "activa" ? "fa-ban" : "fa-check")"></i>
                                <span class="d-none d-md-inline ms-1">@(zona.Estado == "activa" ? "Desactivar" : "Activar")</span>
                            </button>
                        </div>
                        
                        <!-- Botón adicional para agregar sensores -->
                        <div class="mt-2">
                            <a asp-controller="Sensor" asp-action="Create" asp-route-zonaId="@zona.Id" 
                               class="btn btn-sm btn-outline-success w-100"
                               title="Agregar sensor a @zona.NombreZona"
                               data-bs-toggle="tooltip">
                                <i class="fas fa-microchip"></i> Agregar Sensor
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Paginación -->
    @if (Model.TotalPaginas > 1)
    {
        <nav aria-label="Paginación de zonas" class="mt-4">
            <ul class="pagination justify-content-center">
                <!-- Primera página -->
                @if (Model.TienePaginaAnterior)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { busquedaTexto = Model.BusquedaTexto, filtroTipoZona = Model.FiltroTipoZona, filtroHuerto = Model.FiltroHuerto, pagina = 1 })">
                            <i class="fas fa-angle-double-left"></i>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { busquedaTexto = Model.BusquedaTexto, filtroTipoZona = Model.FiltroTipoZona, filtroHuerto = Model.FiltroHuerto, pagina = Model.PaginaActual - 1 })">
                            <i class="fas fa-angle-left"></i>
                        </a>
                    </li>
                }

                <!-- Páginas numéricas -->
                @{
                    int paginaInicio = Math.Max(1, Model.PaginaActual - 2);
                    int paginaFin = Math.Min(Model.TotalPaginas, Model.PaginaActual + 2);
                }

                @for (int i = paginaInicio; i <= paginaFin; i++)
                {
                    <li class="page-item @(i == Model.PaginaActual ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { busquedaTexto = Model.BusquedaTexto, filtroTipoZona = Model.FiltroTipoZona, filtroHuerto = Model.FiltroHuerto, pagina = i })">
                            @i
                        </a>
                    </li>
                }

                <!-- Última página -->
                @if (Model.TienePaginaSiguiente)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { busquedaTexto = Model.BusquedaTexto, filtroTipoZona = Model.FiltroTipoZona, filtroHuerto = Model.FiltroHuerto, pagina = Model.PaginaActual + 1 })">
                            <i class="fas fa-angle-right"></i>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { busquedaTexto = Model.BusquedaTexto, filtroTipoZona = Model.FiltroTipoZona, filtroHuerto = Model.FiltroHuerto, pagina = Model.TotalPaginas })">
                            <i class="fas fa-angle-double-right"></i>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
}

<!-- Form oculto para toggle status -->
<form id="toggleStatusForm" method="post" style="display: none;">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script>
        // Inicializar tooltips de Bootstrap
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });

        // Auto-dismiss alerts
        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert-dismissible');
            alerts.forEach(function(alert) {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);

        // Función para toggle status de zona
        function toggleZonaStatus(zonaId, nombreZona, estadoActual) {
            const accion = estadoActual === 'activa' ? 'desactivar' : 'activar';
            const mensaje = `¿Estás seguro de que deseas ${accion} la zona "${nombreZona}"?`;
            
            if (confirm(mensaje)) {
                const form = document.getElementById('toggleStatusForm');
                form.action = '@Url.Action("ToggleStatus")/' + zonaId;
                form.submit();
            }
        }
    </script>
}